Filename: /home/chenyu/Documents/MSc Computing/Group Project/explainable-multimodal-classification/tests/profiling/explanation_time_cpu.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    10    459.3 MiB    459.3 MiB           1   def predict(model_type,
    11                                                     exp_method,
    12                                                     user_model="no_model",
    13                                                     img_name="profiling.png",
    14                                                     img_text="kill the jews and muslims for being anti-white",
    15                                                     model_path=None,
    16                                                     exp_direction="encourage"):
    17                                         
    18   2071.0 MiB   1611.7 MiB           2       model, label_to_explain, cls_label, cls_confidence = prepare_explanation(
    19    459.3 MiB      0.0 MiB           1           img_name, img_text, user_model, model_type, model_path, exp_direction)
    20                                         
    21   2071.0 MiB      0.0 MiB           1       hateful = 'HATEFUL' if cls_label == 1 else 'NON-HATEFUL'
    22                                         
    23   2071.0 MiB      0.0 MiB           2       cls_result = 'Your uploaded image and text combination ' \
    24                                                          'looks like a {} meme, with {}% confidence.'.format(
    25   2071.0 MiB      0.0 MiB           1                        hateful, "%.2f" % (cls_confidence * 100))
    26                                         
    27   2071.0 MiB      0.0 MiB           1       print(cls_result)
    28                                         
    29   2071.0 MiB      0.0 MiB           1       if exp_method == 'shap':
    30   2090.4 MiB     19.4 MiB           2           text_exp, img_exp, txt_msg, img_msg = shap_mmf.shap_multimodal_explain(
    31   2071.0 MiB      0.0 MiB           1               img_name, img_text, model, label_to_explain, model_output(cls_label, cls_confidence))
    32                                             elif exp_method == 'lime':
    33                                                 text_exp, img_exp, txt_msg, img_msg = lime_mmf.lime_multimodal_explain(
    34                                                     img_name, img_text, model, label_to_explain)
    35                                             elif exp_method == 'torchray':
    36                                                 text_exp, img_exp, txt_msg, img_msg = torchray_mmf.torchray_multimodal_explain(
    37                                                     img_name, img_text, model, label_to_explain)
    38                                             else:
    39                                                 text_exp, img_exp, txt_msg, img_msg = shap_mmf.shap_multimodal_explain(
    40                                                     img_name, img_text, model, label_to_explain)
    41                                         
    42   2090.4 MiB      0.0 MiB           1       img_exp_name, _ = os.path.splitext(img_exp)
    43   2090.4 MiB      0.0 MiB           1       exp_text_visl = img_exp_name + '_text.png'


======== CPU COMPUTATION, NO VRAM USAGE ========
